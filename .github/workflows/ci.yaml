# Copyright 2023 Canonical Ltd.
# See LICENSE file for licensing details.
name: Tests

on:
  workflow_dispatch:
  pull_request:
  workflow_call:
  schedule:
    - cron: "53 0 * * *" # Daily at 00:53 UTC

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install tox
        run: pipx install tox
      - name: Run linters
        run: make lint

  build:
    name: Build charms
    uses: canonical/data-platform-workflows/.github/workflows/build_charm.yaml@v29.1.0
    with:
      cache: true
      path-to-charm-directory: ${{ matrix.path }}
    strategy:
      matrix:
        path:
          - tests/integration/bundle/app-charm

  collect-spread-jobs:
    name: Collect spread jobs
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up environment
        run: |
          sudo snap install charmcraft --classic
          sudo snap install jq
          pipx install tox poetry
      - name: Collect spread jobs
        id: collect-jobs
        run: |
          # create a JSON {name, job, artifact} from the spread jobs

          charmcraft.spread --list github-ci | \
            jq -Rsc 'split("\n")[:-1]' | \
            jq '.[] as $job | {$job, name: $job|split("/")[2:]|join("/"), artifact: $job|split("[:/]"; null)|join("_")}' | \
            jq -sc '.' > $GITHUB_OUTPUT
          
          sed -i '1s/^/jobs=/' $GITHUB_OUTPUT
    outputs:
      jobs: ${{ steps.collect-jobs.outputs.jobs }}

  integration-test:
    strategy:
      fail-fast: false
      max-parallel: 10
      matrix:
        job: ${{ fromJSON(needs.collect-spread-jobs.outputs.jobs) }}
    name: ${{ matrix.job.name }}
    needs:
      - lint
      - build
      - collect-spread-jobs
    runs-on: ubuntu-22.04
    timeout-minutes: 240
    steps:
      - name: (GitHub hosted) Free up disk space
        timeout-minutes: 5
        run: |
          printf '\nDisk usage before cleanup\n'
          df --human-readable
          # Based on https://github.com/actions/runner-images/issues/2840#issuecomment-790492173
          rm -r /usr/share/dotnet
          rm -r /opt/hostedtoolcache/
          printf '\nDisk usage after cleanup\n'
          df --human-readable
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up environment
        timeout-minutes: 5
        run: sudo snap install charmcraft --classic
      # TODO: remove when https://github.com/canonical/charmcraft/issues/2105 and
      # https://github.com/canonical/charmcraft/issues/2130 fixed
      - run: |
          sudo snap install go --classic
          go install github.com/snapcore/spread/cmd/spread@latest
      - name: Download packed charm(s)
        uses: actions/download-artifact@v4
        with:
          pattern: ${{ needs.build.outputs.artifact-prefix }}-*
          merge-multiple: true
      - name: Run spread job
        timeout-minutes: 180
        id: spread
        # TODO: replace with `charmcraft test` when
        # https://github.com/canonical/charmcraft/issues/2105 and
        # https://github.com/canonical/charmcraft/issues/2130 fixed
        run: ~/go/bin/spread -vv '${{ matrix.job.job }}'
      - name: Select model
        timeout-minutes: 1
        if: ${{ (success() || (failure() && steps.spread.outcome == 'failure')) }}
        id: juju-switch
        run: |
          # sudo needed since spread runs scripts as root
          # "testing" is default model created by concierge
          sudo juju switch concierge-lxd
          sudo juju switch testing
          mkdir ~/logs/
      - name: juju status
        timeout-minutes: 1
        if: ${{ (success() || (failure() && steps.spread.outcome == 'failure')) }}
        run: sudo juju status --color --relations | tee ~/logs/juju-status.txt
      - name: juju debug-log
        timeout-minutes: 3
        if: ${{ (success() || (failure() && steps.spread.outcome == 'failure')) }}
        run: sudo juju debug-log --color --replay --no-tail | tee ~/logs/juju-debug-log.txt
      - name: jhack tail
        timeout-minutes: 3
        if: ${{ (success() || (failure() && steps.spread.outcome == 'failure')) }}
        run: sudo jhack tail --printer raw --replay --no-watch | tee ~/logs/jhack-tail.txt
      - name: Upload logs
        timeout-minutes: 5
        if: ${{ (success() || (failure() && steps.spread.outcome == 'failure')) }}
        uses: actions/upload-artifact@v4
        with:
          name: logs-integration-test-${{ matrix.job.artifact }}
          path: ~/logs/
          if-no-files-found: error
      - name: Disk usage
        timeout-minutes: 1
        if: ${{ success() || (failure() && steps.spread.outcome == 'failure') }}
        run: df --human-readable

