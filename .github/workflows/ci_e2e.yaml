# Copyright 2023 Canonical Ltd.
# See LICENSE file for licensing details.
name: Tests (End-to-End)

on:
  pull_request:
  workflow_dispatch:
  workflow_call:
  schedule:
    - cron: "53 0 * * SAT" # Every Saturday at 00:53 UTC

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install tox
        run: pipx install tox
      - name: Run linters
        run: make lint

  e2e-tests:
    strategy:
      fail-fast: false
      max-parallel: 10
      matrix:
        tox-environments:
          - integration-e2e-basic-flow
          - integration-e2e-password-rotation
        tls:
          -
          - true
        options:
          -
          - --integrator
        juju:
          - snap_channel: "3.4/stable"
            agent: "3.4.2"
          - snap_channel: "3.6/stable"
            agent: "3.6.0"
    name: ${{ matrix.tox-environments }}-${{matrix.options}}_${{ matrix.juju.agent || matrix.juju.snap_channel }}
    needs:
      - lint
    runs-on: ["self-hosted", "linux", "X64", "jammy", "large"]
    timeout-minutes: 120
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup operator environment
        # TODO: Replace with custom image on self-hosted runner
        uses: charmed-kubernetes/actions-operator@main
        with:
          provider: lxd
          juju-channel: ${{ matrix.juju.snap_channel }}
          bootstrap-options: "--agent-version ${{ matrix.juju.agent }}"
      - name: Select tests
        id: select-tests
        run: |
          if [ "${{ github.event_name }}" == "schedule" ]
          then
            echo Running unstable and stable tests
            echo "mark_expression=" >> $GITHUB_OUTPUT
          else
            echo Skipping unstable tests
            echo "mark_expression=not unstable" >> $GITHUB_OUTPUT
          fi
      - name: Run integration e2e tests
        run: |
          if [ -z "${{ matrix.tls }}" ]; then
            FLAGS="${{matrix.options}}"
          else
            FLAGS="${{matrix.options}} --tls"
          fi
          
          make build TLS=${{ matrix.tls }}
          echo "======================"
          echo "Bundle being deployed:"
          echo "======================"
          cat build/bundle.yaml
          echo "======================"
          tox run -e ${{ matrix.tox-environments }} -- -m '${{ steps.select-tests.outputs.mark_expression }}' $FLAGS
